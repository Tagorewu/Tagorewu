<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>http on Tagore&#39;s Studio</title>
    <link>http://github.wuquantai.com/tags/http/</link>
    <description>Recent content in http on Tagore&#39;s Studio</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 14 Dec 2016 14:25:28 +0000</lastBuildDate>
    
	<atom:link href="http://github.wuquantai.com/tags/http/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>HTTP协议与HTTP表单传输格式</title>
      <link>http://github.wuquantai.com/</link>
      <pubDate>Wed, 13 Apr 2016 07:27:50 +0000</pubDate>
      
      <guid>http://github.wuquantai.com/</guid>
      <description>HTTP请求 从使用者的角度看，一个HTTP请求起始于 用户端浏览器上输入的一个URL地址； 网页中的一个超链接； 提交一个HTML表单。 但本质上说，一个HTTP请求起始于用户端向HTTP服务器发送的一个URL请求。 一个标准的HTTP请求由以下几个部分组成
[code] [] [/code]
在HTTP请求中，第一行是请求行（request-line），用来说明请求类型、要访问的资源（URL）以及使用的HTTP版本； 紧接着是多行头部（headers）信息，用来说明服务器要使用的附加信息； 头部信息之后是一个回车换行符（/r/n），用于标明头部信息的结束。 以上是必须内容，根据需要可在头部信息结束之后增加主体数据（request-body）； 主体数据之后是一个回车换行符（/r/n），用于标明主体数据的结束。
需要注意的是 请求行（request-line）中的URL部分必须以application/x-www-form-urlencoded方式编码。 主体数据（request-body）的编码方式由头部（headers）信息中的Content-Type指定。 主体数据（request-body）的长度由头部（headers）信息中的Content-Length指定。
例如，我们可以在IE浏览器上输入下面的网址： http://localhost:8000/hello/index.html HTTP请求的头部信息如下： [code] GET /hello/index.html HTTP/1.1 Accept: / Accept-Language: zh-cn Accept-Encoding: gzip, deflate Host: localhost:8000 Connection: Keep-Alive Cookie: JSESSIONID=BBBA54D519F7A320A54211F0107F5EA6
[/code] 上述信息没有request-body部分，这是以GET方式发送的HTTP请求。如果请求中需要附加主体数据，即增加request-body部分，则必须使用POST方式发送HTTP请求。HTML超链接（）只能用GET方式提交HTTP请求，HTML表单()则可以使用两种方式提交HTTP请求。 HTML表单 HTML表单的使用方法如下：
[html] &amp;hellip;
表单中存在各种类型的表单域标签，如
[html] 、及。 [/html]
每一种表单域标签均有NAME与VALUE两种标签属性。这两个标签属性决定了表单提交时传送的属性名及相应的值。 目标地址（URL） action标签属性指定了表单提交的目标地址，其值可以是完整的URL。如：
[html] &amp;hellip;
这样的表单是不符合要求的。如果其URL值存在非法字符（如中文字符），应将其进行URL Encoding处理。URL Encoding的处理方法如下： 字母数字字符 &amp;ldquo;a&amp;rdquo; 到 &amp;ldquo;z&amp;rdquo;、&amp;ldquo;A&amp;rdquo; 到 &amp;ldquo;Z&amp;rdquo; 和 &amp;ldquo;0&amp;rdquo; 到 &amp;ldquo;9&amp;rdquo; 保持不变。 特殊字符 &amp;ldquo;.&amp;quot;、&amp;quot;-&amp;quot;、&amp;quot;*&amp;rdquo; 和 &amp;ldquo;_&amp;rdquo; 保持不变。 空格字符 &amp;quot; &amp;quot; 转换为一个加号 &amp;ldquo;+&amp;rdquo;。 所有其他字符都是不安全的，因此首先使用一种编码机制将它们转换为一个或多个字节。然后对每个字节用一个包含 3 个字符的字符串 &amp;ldquo;%xy&amp;rdquo; 表示，其中 xy 为该字节的两位十六进制表示形式。推荐的编码机制是 UTF-8。 将“中文”两个字符进行URL Encoding所得到的值就是“%E4%B8%AD%E6%96%87”。 所以正确的表单应该是：</description>
    </item>
    
  </channel>
</rss>