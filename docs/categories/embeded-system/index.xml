<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Embeded system on Tagore&#39;s Studio</title>
    <link>http://github.wuquantai.com/categories/embeded-system/</link>
    <description>Recent content in Embeded system on Tagore&#39;s Studio</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 20 Apr 2019 13:59:51 +0000</lastBuildDate>
    
	<atom:link href="http://github.wuquantai.com/categories/embeded-system/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>zynq 嵌入式开发总结</title>
      <link>http://github.wuquantai.com/</link>
      <pubDate>Sat, 20 Apr 2019 13:59:51 +0000</pubDate>
      
      <guid>http://github.wuquantai.com/</guid>
      <description>传统开发步骤 基础设计
&amp;lt;code&amp;gt;# 使用Vidado 设计硬件工程，导出硬件设计 bitstream. $ File-&amp;gt; Export-&amp;gt; Export Hardware... # 使用SDK 生成 fsbl.elf # 编译U-boot $ make CROSS_COMPILE=arm-xilinx-linux-gnueabi- zynq_ac7020_defconfig # 使用SDK， Xilinx Tools-&amp;gt;Create Boot Image 生成BOOT.BIN。 即: fsbl.elf + system_wrapper.bit + u-boot.elf&amp;lt;/code&amp;gt;  编译kernel
&amp;lt;code&amp;gt;$ make ARCH=arm CROSS_COMPILE=arm-xilinx-linux-gnueabi- uImage LOADADDR=0x00008000 # 生成 /arch/arm/boot/uImage&amp;lt;/code&amp;gt;  编译device tree
&amp;lt;code&amp;gt;$ dtc -I dts -O dtb devicetree.dtb ./arch/arm/boot/dts/AC7020.dts&amp;lt;/code&amp;gt;  制作文件系统
&amp;lt;code&amp;gt;$ 基于RAM 的 ramdisk $ 基于Flash 的 jffs2 $ 基于network 的 NFS&amp;lt;/code&amp;gt;  将 BOOT.</description>
    </item>
    
    <item>
      <title>recent new tech need to analysis and learn</title>
      <link>http://github.wuquantai.com/</link>
      <pubDate>Fri, 01 Jun 2018 02:44:51 +0000</pubDate>
      
      <guid>http://github.wuquantai.com/</guid>
      <description>reverse ssh tunnel nohup ssh -NfR 2222:localhost:22 root@106.12.13.xxx -p22 expect script strip command Some useful line editing key bindings provided by the Readline library:
 * Ctrl-A: go to the beginning of line * Ctrl-E: go to the end of line * Alt-B: skip one word backward * Alt-F: skip one word forward * Ctrl-U: delete to the beginning of line * Ctrl-K: delete to the end of line * Alt-D: delete to the end of word  https://askubuntu.</description>
    </item>
    
    <item>
      <title>gdb 简记</title>
      <link>http://github.wuquantai.com/</link>
      <pubDate>Wed, 21 Dec 2016 09:41:23 +0000</pubDate>
      
      <guid>http://github.wuquantai.com/</guid>
      <description>常用命令如下：（详情可以用 help 命令查看）
 r (run, restart)
s (step into)
n (next state, step over)
finish (step out)
q (quit)
p (print anything you want)
l (list)
b (breakpoint) #设置断点： (gdb) b fileName.c:lineNumber 或者 (gdb) b function
u (until) #运行到指定行
call #调用函数
set #设置变量
set args #设置main 的输入参数
bt (backtrace) #查看堆栈
x #examine memory, (gdb)/FMT ADDRESS
info # show things, (gdb) info break
d # delete somthing (gdb) delete break xx 或者 (gdb) clean lineNumber</description>
    </item>
    
    <item>
      <title>Eclipse ARM IDE 开发环境搭建</title>
      <link>http://github.wuquantai.com/</link>
      <pubDate>Sat, 12 Dec 2015 15:02:24 +0000</pubDate>
      
      <guid>http://github.wuquantai.com/</guid>
      <description>一、Eclipse
Eclipse的本身只是一个框架平台，但是众多插件的支持，使得Eclipse拥有较好的灵活性。依托于Java 环境运行，所以必须安装 Jre。
二、CDT
CDT是Eclipse用于扩展Eclipse支持C/C++开发的插件。可直接下载带CDT的Eclipse。
三、Zylin CDT
支持Eclipse用于嵌入式C/C++开发和远程调试的插件。
四、Yagarto
Yagarto是整合了GNU arm的交叉编译工具链，是一个跨平台的 ARM 架构开发平台。他们说了，由于基于MinGW的ToolChain 的GDB 跟Eclipse 配合不是很好，所以Yagarto 出现了。目前Yagarto 项目已经完结。此外Yagrato 建议使用免费的
 * [emIDE](http://www.emide.org/) (free Visual Studio Style IDE including GNU Tools for ARM) 。其集成了GNU Tools。  五、J-LINK GDB Server
A JTAG GDB Debug agent run on Host
六、IDE整体结构框图
安装：
1、安装Java SE
下载地址：http://www.oracle.com/technetwork/java/javase/downloads/jre-7u3-download-1501631.html
设置环境变量:
如果只安装Jre的话就添加 : JAVA_HOME = C:\Program Files\Java\jre1.8.0_65;
若是安装JDK的话就添加 : JAVA_HOME = C:\Program Files\Java\jdk1.8.0_65;
Path = %JAVA_HOME%\bin;%JAVA_HOME%\jre\bin;
//安装JDK时，JDK内部有个jre目录，外部也默认安装了一个jre目录。一般配置jre环境为内部jre目录。
CLASSPATH = .</description>
    </item>
    
  </channel>
</rss>